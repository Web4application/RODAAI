name: RODA Full Auto Deploy 🚀

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🔁 Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: 📦 Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: 🧠 Train AI Model
        run: |
          source venv/bin/activate
          python models/train_model.py --model RODA

      - name: 📦 Upload Trained Model
        uses: actions/upload-artifact@v4.6.2
        with:
          name: roda-trained-model
          path: models/output/model.bin
          if-no-files-found: error
          retention-days: 14
          compression-level: 6
          overwrite: true

      - name: 🐋 Build Docker Image
        run: |
          docker build -t roda-api .

      - name: 📦 Upload Docker Image (save as artifact)
        run: |
          docker save roda-api | gzip > roda-api.tar.gz
        shell: bash

      - name: 🔼 Upload Docker Tarball
        uses: actions/upload-artifact@v4.6.2
        with:
          name: roda-docker-image
          path: roda-api.tar.gz
          if-no-files-found: error

      - name: 🗃 Upload Pip Cache (optional)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🔽 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: roda-docker-image
          path: ./deploy

      - name: 📦 Load Docker Image
        run: |
          gunzip -c ./deploy/roda-api.tar.gz | docker load

      - name: 🚀 Run Container
        run: |
          docker run -d -p 8000:8000 --name roda-api-container roda-api
